apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file ./../docker-compose.yml convert
    kompose.version: 1.21.0 ()
  labels:
    io.kompose.service: nodewithdb
  name: nodewithdb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nodewithdb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file ./../docker-compose.yml convert
        kompose.version: 1.21.0 ()
      labels:
        io.kompose.service: nodewithdb
    spec:
      containers:
      - env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: nodeapp-docker-node-env
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: nodeapp-docker-node-env
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              key: DB_PORT
              name: nodeapp-docker-node-env
        - name: DB_PWD
          valueFrom:
            secretKeyRef:
              key: DB_PWD
              name: nodewithdb-secret
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: DB_USER
              name: nodewithdb-secret
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_HOST
              name: nodeapp-docker-node-env
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              key: REDIS_PORT
              name: nodeapp-docker-node-env
        - name: REDIS_PASS
          valueFrom:
            secretKeyRef:
              key: REDIS_PASS
              name: nodewithdb-secret
        image: bolbeck/nodewithdb
        imagePullPolicy: ""
        name: nodewithdbcont
        ports:
        - containerPort: 3000
        resources: {}
      - args:
        - sh
        - -c
        - redis-server
        - --requirepass
        - ${REDIS_PASS}
        env:
        - name: REDIS_PASS
          valueFrom:
            configMapKeyRef:
              key: REDIS_PASS
              name: redis-docker-redis-env
        image: redis
        imagePullPolicy: ""
        name: rediscont
        ports:
        - containerPort: 6379
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
